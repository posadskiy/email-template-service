#tag::micronaut[]
micronaut:
  application:
    name: email-template-service
  server:
    port: 8091
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger/swagger/
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  security:
    authentication: bearer
    intercept-url-map:
      - pattern: /swagger-ui/**
        access: isAnonymous()
      - pattern: /swagger/**
        access: isAnonymous()
      - pattern: /v3/api-docs/**
        access: isAnonymous()
      - pattern: /prometheus
        access: isAnonymous()
      - pattern: /health
        access: isAnonymous()
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: "${JWT_GENERATOR_SIGNATURE_SECRET}"
        generator:
          refresh-token:
            enabled: true
            secret: "${JWT_GENERATOR_SIGNATURE_SECRET}"
      generator:
        access-token:
          expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:360000}
  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
        descriptions: true
        step: ${METRICS_STEP:1m}
  endpoints:
    prometheus:
      enabled: true
      sensitive: false
    health:
      enabled: true
      sensitive: false
      details:
        enabled: true
#end::micronaut[]

#tag::jaeger[]
tracing:
  jaeger:
    enabled: true
    sampler:
      probability: ${JAEGER_SAMPLER_PROBABILITY:0.01}
    http-sender:
      url: ${JAEGER_HTTP_SENDER_URL:http://jaeger:14268/api/traces}
#end::jaeger[]

#tag::logging[]
logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    com.posadskiy.email.template: ${LOG_LEVEL_APP:INFO}
    io.micronaut: ${LOG_LEVEL_MICRONAUT:WARN}
    org.thymeleaf: ${LOG_LEVEL_TEMPLATE:WARN}
#end::logging[]
